<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2018 Tirasa

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.syncope</groupId>
    <artifactId>syncope</artifactId>
    <version>3.0.10</version>
  </parent>

  <name>Apache Syncope Performance Tools</name>
  <groupId>net.tirasa.syncope</groupId>
  <artifactId>syncoperf</artifactId>
  <packaging>war</packaging>

  <properties>
    <syncope.version>3.0.10</syncope.version>

    <bulk.load.users>1000</bulk.load.users>

    <threads>10</threads>
    <loops>30</loops>
    <rampup>10</rampup>
    <gap>4000</gap>
    <duration>1200</duration>

    <secretKey>sadfaffdasfadfasdafds</secretKey>
    <anonymousKey>adsfsdfadsfasdf</anonymousKey>
    <jwsKey>MFgC6p0bM3iNikJmCh4BEtRHl7tkWGdffozqBkYfPZtBqHDltHsQkIE0YNzGOG6E</jwsKey>
    <adminPassword>DE088591C00CC98B36F5ADAAF7DA2B004CF7F2FE7BBB45B766B6409876E2F3DB13C7905C6AA59464</adminPassword>

    <ianal.phase>none</ianal.phase>
    <rat.skip>true</rat.skip>
    <checkstyle.skip>true</checkstyle.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
    </dependency>
 
    <dependency>
      <groupId>org.apache.syncope.core</groupId>
      <artifactId>syncope-core-self-keymaster-starter</artifactId>
      <version>${syncope.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.syncope.core</groupId>
      <artifactId>syncope-core-starter</artifactId>
      <version>${syncope.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.syncope.core.idm</groupId>
      <artifactId>syncope-core-idm-rest-cxf</artifactId>
      <version>${syncope.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.syncope.core.am</groupId>
      <artifactId>syncope-core-am-rest-cxf</artifactId>
      <version>${syncope.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.syncope.core</groupId>
      <artifactId>syncope-core-persistence-jpa-json</artifactId>
      <version>${syncope.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.syncope.client.idrepo</groupId>
      <artifactId>syncope-client-idrepo-lib</artifactId>
      <version>${syncope.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>syncope</finalName>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>set-bundles</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>verify</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
  
      <plugin>
        <groupId>com.lazerycode.jmeter</groupId> 
        <artifactId>jmeter-maven-plugin</artifactId> 
        <version>3.8.0</version>
        <configuration>
          <testFilesIncluded>
            <jMeterTestFile>heterogeneous.jmx</jMeterTestFile>
          </testFilesIncluded>
          <propertiesUser>
            <threads>${threads}</threads>
            <loops>${loops}</loops>
            <rampup>${rampup}</rampup>
            <gap>${gap}</gap>
            <duration>${duration}</duration>
          </propertiesUser>
        </configuration>
        <executions>
          <execution>
            <id>configuration</id>
            <goals>
              <goal>configure</goal>
            </goals>
          </execution>
          <execution>
            <id>jmeter-tests</id>
            <goals>
              <goal>jmeter</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>org.apache.syncope.core.starter.SyncopeCoreApplication</mainClass>
          <systemPropertyVariables>
            <syncope.conf.dir>${project.build.directory}/test-classes</syncope.conf.dir>
            <syncope.connid.location>file:${bundles.directory}/</syncope.connid.location>
            <syncope.log.dir>${project.build.directory}/log</syncope.log.dir>            
          </systemPropertyVariables>              
        </configuration>
        <executions>
          <execution>
            <id>start-syncope</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-syncope</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>nodyn</id>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <version>1.1.0</version>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.build.directory}/test-classes</dir>
                  <includes>
                    <include>domains/MasterContent.xml</include>
                  </includes>
                  <outputDir>${project.build.directory}/test-classes</outputDir>
                  <stylesheet>${basedir}/src/test/resources/nodyn.xsl</stylesheet>
                  <outputProperties>
                    <outputProperty>
                      <name>indent</name>
                      <value>yes</value>
                    </outputProperty>
                  </outputProperties>
                </transformationSet>
              </transformationSets>
            </configuration>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>transform</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>es</id>
      
      <dependencies>
        <dependency>
          <groupId>org.apache.syncope.ext.elasticsearch</groupId>
          <artifactId>syncope-ext-elasticsearch-provisioning-java</artifactId>
          <version>${syncope.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.syncope.ext.elasticsearch</groupId>
          <artifactId>syncope-ext-elasticsearch-persistence-jpa</artifactId>
          <version>${syncope.version}</version>
        </dependency>
      </dependencies>
      
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>enable-elasticsearch</id>
                <phase>prepare-package</phase>
                <configuration>
                  <target>
                    <replaceregexp file="${project.build.directory}/test-classes/persistence.properties" byline="true"
                                   match="any.search.dao=.*"
                                   replace="any.search.dao=org.apache.syncope.core.persistence.jpa.dao.ElasticsearchAnySearchDAO"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <webResources>
                <resource>
                  <directory>src/main/webapp/WEB-INF</directory>
                  <excludes>
                    <exclude>web.xml</exclude>
                  </excludes>
                </resource>
              </webResources>
              <webXml>${basedir}/src/main/resources/elasticsearch/web.xml</webXml>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>pgjsonb</id>

      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>${jdbc.postgresql.version}</version>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <alias>postgres</alias>
                  <name>postgres:${docker.postgresql.version}</name>
                  <run>
                    <env>
                      <POSTGRES_DB>syncope</POSTGRES_DB>
                      <POSTGRES_USER>syncope</POSTGRES_USER>
                      <POSTGRES_PASSWORD>syncope</POSTGRES_PASSWORD>
                    </env>
                    <wait>
                      <log>database system is ready to accept connections</log>
                      <time>30000</time>
                    </wait>
                    <tmpfs>
                      <mount>/var/lib/postgresql/data:rw</mount>
                    </tmpfs>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start-postgres</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-postgres</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>remove</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <profiles>
                <profile>syncoperf</profile>
                <profile>pgjsonb</profile>
              </profiles>
              <systemPropertyVariables>
                <DB_CONTAINER_IP>${docker.container.postgres.ip}</DB_CONTAINER_IP>
              </systemPropertyVariables>              
            </configuration>
          </plugin>  
        </plugins>
      </build>
    </profile>

    <profile>
      <id>mariadb</id>

      <dependencies>
        <dependency>
          <groupId>org.mariadb.jdbc</groupId>
          <artifactId>mariadb-java-client</artifactId>
          <version>${jdbc.mariadb.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <defaultGoal>clean verify</defaultGoal>

        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <name>docker.elastic.co/elasticsearch/elasticsearch:${elasticsearch.version}</name>
                  <run>
                    <env>
                      <discovery.type>single-node</discovery.type>
                      <cluster.name>elasticsearch</cluster.name>
                      <xpack.security.enabled>false</xpack.security.enabled>
                    </env>
                    <ports>
                      <port>9200:9200</port>
                      <port>9300:9300</port>
                    </ports>
                  </run>
                </image>
                <image>
                  <name>mariadb:${docker.mariadb.version}</name>
                  <run>
                    <env>
                      <MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD>
                      <MYSQL_DATABASE>syncope</MYSQL_DATABASE>
                      <MYSQL_USER>syncope</MYSQL_USER>
                      <MYSQL_PASSWORD>syncope</MYSQL_PASSWORD>
                    </env>
                    <ports>
                      <port>3306:3306</port>
                    </ports>
                    <wait>
                      <log>MySQL init process done. Ready for start up.</log>
                      <time>120000</time>
                    </wait>
                  </run>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>start-mariadb</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-mariadb</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                  <goal>remove</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>start-container</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-container</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>

        <resources>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
            <excludes>
              <exclude>persistence.properties</exclude>
              <exclude>provisioning.properties</exclude>
            </excludes>
          </resource>
          <resource>
            <directory>src/main/resources/mariadb</directory>
            <filtering>true</filtering>
          </resource>
        </resources>
        <testResources>
          <testResource>
            <directory>src/main/resources/mariadb</directory>
            <filtering>true</filtering>
            <includes>
              <include>persistence.properties</include>
              <include>provisioning.properties</include>
            </includes>    
          </testResource>
          <testResource>
            <directory>src/main/resources/mariadb/domains</directory>
            <targetPath>${project.build.directory}/test-classes/domains</targetPath>
            <filtering>true</filtering>
          </testResource>
        </testResources>
      </build>
    </profile>
  </profiles>
  
  <repositories>
    <repository>
      <id>apache.snapshots</id>
      <url>https://repository.apache.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
</project>
